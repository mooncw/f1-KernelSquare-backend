plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

allprojects {
    group = 'com.kernel360'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '21'

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        implementation 'org.springframework.boot:spring-boot-starter-actuator'
        implementation 'io.micrometer:micrometer-registry-prometheus'
    }

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }
}

//dependencies {
//    //Spring Boot
//    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-validation'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//
//    compileOnly 'org.projectlombok:lombok'
//
//    runtimeOnly 'com.mysql:mysql-connector-j'
//
//    annotationProcessor 'org.projectlombok:lombok'
//
//    //S3
//    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.1'
//
//    //QueryDSL
//    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
//    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
//    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
//    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
//
//    //AOP
//    implementation 'org.springframework.boot:spring-boot-starter-aop'
//
//    implementation 'org.springframework.boot:spring-boot-starter-actuator'
//    implementation 'io.micrometer:micrometer-registry-prometheus'
//
//    //Security
//    implementation 'org.springframework.boot:spring-boot-starter-security'
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
//
//    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
//    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'
//
//    //flyway
//    implementation 'org.flywaydb:flyway-mysql'
//
//    //websocket
//    implementation 'org.springframework.boot:spring-boot-starter-websocket'
//
//    // ====> 소켓 통신의 임시 화면을 위함, 정식 화면이 생기면 삭제 할 것 !!
//    implementation 'org.webjars:sockjs-client:1.1.2'
//    implementation 'org.webjars:stomp-websocket:2.3.3-1'
//
//    //view
//    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
//    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
//    implementation 'org.springframework.boot:spring-boot-devtools'
//    implementation 'org.webjars.bower:bootstrap:4.3.1'
//    implementation 'org.webjars.bower:vue:2.5.16'
//    implementation 'org.webjars.bower:axios:0.17.1'
//    implementation 'com.google.code.gson:gson:2.8.0'
//    // <====
//
//    //mongodb
//    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
//
//    //kafka
//    implementation 'org.springframework.kafka:spring-kafka'
//
//    //Test
//    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.security:spring-security-test'
//
//    testImplementation 'com.h2database:h2'
//}

tasks.named('bootJar') {
    enabled = false
}
tasks.named('jar') {
    enabled = false
}

tasks.named('test') {
    useJUnitPlatform()
}